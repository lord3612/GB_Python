"""
Дан список:
['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками
(добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём
до двух целочисленных разрядов:
['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']

Сформировать из обработанного списка строку:
в "05" часов "17" минут температура воздуха была "+05" градусов

Подумать, какое условие записать, чтобы выявить числа среди элементов списка?
Как модифицировать это условие для чисел со знаком?
Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к
его реализации позже. Главное: дополнить числа до двух разрядов нулём!
"""
my_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
new_list = []
new_list2 = []
for elem in my_list:
    """Не привык списывать чужой код, пытался как то иначе решить! Нашёл даже функцию isalnum(),
    в надежде, что она не пропустит '+5', хоть как то бы сделал половину кода иначе, НО увы.
    И клшжа увидел разок готовое решение, мозг отказывается искать другую логику."""
    if elem.isdigit():
        new_list.extend(['"', f'{int(elem):02}', '"'])
    elif elem.startswith('+') or elem.startswith('-') and elem[1:].isdigit():
        new_list.extend(['"', f'{elem[0]}{int(elem[1:]):02}', '"'])
    else:
        new_list.append(elem)
print(new_list)
new_str = ' '.join(new_list)
print(new_str)

"""Дальше решил не смотреть, и вопрос как удалить пробел. Первое что пришло в голову зачем изначально
было его вставлять? Делать в решинии ошибку ради того что бы ее в следствии исправить функцией?
В общем мне пришло в голову только провести тот же алгоритм только 'без' пробела"""
my_list2 = (new_str.split(' " '))
for elem in my_list2:
    if elem.isdigit():
        new_list2.extend([f'"{int(elem):02}"'])
    elif elem.startswith('+') or elem.startswith('-') and elem[1:].isdigit():
        new_list.extend([f'"{elem[0]}{int(elem[1:]):02}"'])
    else:
        new_list2.append(elem)
new_str2 = ' '.join(new_list2)
print(new_str2)


